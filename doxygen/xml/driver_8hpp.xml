<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="driver_8hpp" kind="file" language="C++">
    <compoundname>driver.hpp</compoundname>
    <includes refid="enum_8hpp" local="yes">enum.hpp</includes>
    <includes local="no">type_traits</includes>
    <includedby refid="adc_8hpp" local="yes">/github/workspace/include/libembeddedhal/adc/adc.hpp</includedby>
    <includedby refid="can_8hpp" local="yes">/github/workspace/include/libembeddedhal/can/can.hpp</includedby>
    <includedby refid="can__network_8hpp" local="yes">/github/workspace/include/libembeddedhal/can/can_network.hpp</includedby>
    <includedby refid="counter_8hpp" local="yes">/github/workspace/include/libembeddedhal/counter/counter.hpp</includedby>
    <includedby refid="dac_8hpp" local="yes">/github/workspace/include/libembeddedhal/dac/dac.hpp</includedby>
    <includedby refid="gpio_8hpp" local="yes">/github/workspace/include/libembeddedhal/gpio/gpio.hpp</includedby>
    <includedby refid="i2c_8hpp" local="yes">/github/workspace/include/libembeddedhal/i2c/i2c.hpp</includedby>
    <includedby refid="pwm_8hpp" local="yes">/github/workspace/include/libembeddedhal/pwm/pwm.hpp</includedby>
    <includedby refid="serial_8hpp" local="yes">/github/workspace/include/libembeddedhal/serial/serial.hpp</includedby>
    <includedby refid="spi_8hpp" local="yes">/github/workspace/include/libembeddedhal/spi/spi.hpp</includedby>
    <includedby refid="timer_8hpp" local="yes">/github/workspace/include/libembeddedhal/timer/timer.hpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>/github/workspace/include/libembeddedhal/driver.hpp</label>
        <link refid="driver_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>enum.hpp</label>
        <link refid="enum_8hpp"/>
      </node>
      <node id="3">
        <label>type_traits</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>/github/workspace/include/libembeddedhal/driver.hpp</label>
        <link refid="driver_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>/github/workspace/include/libembeddedhal/i2c/i2c.hpp</label>
        <link refid="i2c_8hpp"/>
      </node>
      <node id="4">
        <label>/github/workspace/include/libembeddedhal/can/can_network.hpp</label>
        <link refid="can__network_8hpp"/>
      </node>
      <node id="7">
        <label>/github/workspace/include/libembeddedhal/gpio/gpio.hpp</label>
        <link refid="gpio_8hpp"/>
      </node>
      <node id="6">
        <label>/github/workspace/include/libembeddedhal/dac/dac.hpp</label>
        <link refid="dac_8hpp"/>
      </node>
      <node id="5">
        <label>/github/workspace/include/libembeddedhal/counter/counter.hpp</label>
        <link refid="counter_8hpp"/>
      </node>
      <node id="11">
        <label>/github/workspace/include/libembeddedhal/spi/spi.hpp</label>
        <link refid="spi_8hpp"/>
      </node>
      <node id="2">
        <label>/github/workspace/include/libembeddedhal/adc/adc.hpp</label>
        <link refid="adc_8hpp"/>
      </node>
      <node id="9">
        <label>/github/workspace/include/libembeddedhal/pwm/pwm.hpp</label>
        <link refid="pwm_8hpp"/>
      </node>
      <node id="12">
        <label>/github/workspace/include/libembeddedhal/timer/timer.hpp</label>
        <link refid="timer_8hpp"/>
      </node>
      <node id="3">
        <label>/github/workspace/include/libembeddedhal/can/can.hpp</label>
        <link refid="can_8hpp"/>
      </node>
      <node id="10">
        <label>/github/workspace/include/libembeddedhal/serial/serial.hpp</label>
        <link refid="serial_8hpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structembed_1_1invalid__option__t" prot="public">embed::invalid_option_t</innerclass>
    <innerclass refid="structembed_1_1no__settings" prot="public">embed::no_settings</innerclass>
    <innerclass refid="classembed_1_1driver" prot="public">embed::driver</innerclass>
    <innernamespace refid="namespaceembed">embed</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="enum_8hpp" kindref="compound">enum.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;type_traits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceembed" kindref="compound">embed</ref><sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">auto</highlight><highlight class="normal">...<sp/>options&gt;</highlight></codeline>
<codeline lineno="16" refid="structembed_1_1invalid__option__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structembed_1_1invalid__option__t" kindref="compound">invalid_option_t</ref><sp/>:<sp/>std::false_type</highlight></codeline>
<codeline lineno="17"><highlight class="normal">{};</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">auto</highlight><highlight class="normal">...<sp/>options&gt;</highlight></codeline>
<codeline lineno="26" refid="namespaceembed_1a987ef4ed606ec89c1e19cce294309efe" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespaceembed_1a987ef4ed606ec89c1e19cce294309efe" kindref="member">invalid_option</ref><sp/>=<sp/><ref refid="structembed_1_1invalid__option__t" kindref="compound">invalid_option_t</ref>&lt;options...&gt;<ref refid="namespaceembed_1adb81fed604e4119c9318e47024eeb4b3" kindref="member">::value</ref>;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="structembed_1_1no__settings" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structembed_1_1no__settings" kindref="compound">no_settings</ref></highlight></codeline>
<codeline lineno="34"><highlight class="normal">{};</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>settings_t<sp/>=<sp/>no_settings&gt;</highlight></codeline>
<codeline lineno="45" refid="classembed_1_1driver" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classembed_1_1driver" kindref="compound">driver</ref></highlight></codeline>
<codeline lineno="46"><highlight class="normal">{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="60" refid="classembed_1_1driver_1a947a3487fa3acd0879e83872d9c97b01" refkind="member"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classembed_1_1driver_1a947a3487fa3acd0879e83872d9c97b01" kindref="member">initialize</ref>()</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>success<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classembed_1_1driver_1ab8b2029f33d55b9ffffd6e88d846cd7b" kindref="member">m_initialized</ref>)<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>success<sp/>=<sp/><ref refid="classembed_1_1driver_1a1677362481d10c3b48544359daadf081" kindref="member">driver_initialize</ref>();</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(success)<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classembed_1_1driver_1aac7d23e384bc27a26b77c8fd681483ef" kindref="member">m_initialized_settings</ref><sp/>=<sp/><ref refid="classembed_1_1driver_1afb925433a5897293609af5fae29e3dc3" kindref="member">m_settings</ref>;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classembed_1_1driver_1ab8b2029f33d55b9ffffd6e88d846cd7b" kindref="member">m_initialized</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>success<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>success;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="81" refid="classembed_1_1driver_1a54440bf23c0c34102f563da1193d99ae" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classembed_1_1driver_1a54440bf23c0c34102f563da1193d99ae" kindref="member">reset</ref>()<sp/>{<sp/><ref refid="classembed_1_1driver_1ab8b2029f33d55b9ffffd6e88d846cd7b" kindref="member">m_initialized</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="88" refid="classembed_1_1driver_1a346f472e8c212d09c8f45aebd0089d7b" refkind="member"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classembed_1_1driver_1a346f472e8c212d09c8f45aebd0089d7b" kindref="member">is_initialized</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classembed_1_1driver_1ab8b2029f33d55b9ffffd6e88d846cd7b" kindref="member">m_initialized</ref>;<sp/>}</highlight></codeline>
<codeline lineno="96" refid="classembed_1_1driver_1ae6eb991ebb2321bb3565c2a03a613219" refkind="member"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/>settings_t&amp;<sp/><ref refid="classembed_1_1driver_1ae6eb991ebb2321bb3565c2a03a613219" kindref="member">settings</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classembed_1_1driver_1afb925433a5897293609af5fae29e3dc3" kindref="member">m_settings</ref>;<sp/>}</highlight></codeline>
<codeline lineno="107" refid="classembed_1_1driver_1a7e13fe8999142475da8c5b84927f03aa" refkind="member"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>settings_t&amp;<sp/><ref refid="classembed_1_1driver_1a7e13fe8999142475da8c5b84927f03aa" kindref="member">initialized_settings</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="108"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classembed_1_1driver_1afb925433a5897293609af5fae29e3dc3" kindref="member">m_settings</ref>;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="113" refid="classembed_1_1driver_1a1677362481d10c3b48544359daadf081" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classembed_1_1driver_1a1677362481d10c3b48544359daadf081" kindref="member">driver_initialize</ref>()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="114" refid="classembed_1_1driver_1afb925433a5897293609af5fae29e3dc3" refkind="member"><highlight class="normal"><sp/><sp/>settings_t<sp/><ref refid="classembed_1_1driver_1afb925433a5897293609af5fae29e3dc3" kindref="member">m_settings</ref>{};</highlight></codeline>
<codeline lineno="115" refid="classembed_1_1driver_1aac7d23e384bc27a26b77c8fd681483ef" refkind="member"><highlight class="normal"><sp/><sp/>settings_t<sp/><ref refid="classembed_1_1driver_1aac7d23e384bc27a26b77c8fd681483ef" kindref="member">m_initialized_settings</ref>{};</highlight></codeline>
<codeline lineno="116" refid="classembed_1_1driver_1ab8b2029f33d55b9ffffd6e88d846cd7b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classembed_1_1driver_1ab8b2029f33d55b9ffffd6e88d846cd7b" kindref="member">m_initialized</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="117"><highlight class="normal">};</highlight></codeline>
<codeline lineno="118"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>embed</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/github/workspace/include/libembeddedhal/driver.hpp"/>
  </compounddef>
</doxygen>
