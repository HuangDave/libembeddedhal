<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="gpio_8hpp" kind="file" language="C++">
    <compoundname>gpio.hpp</compoundname>
    <includes refid="driver_8hpp" local="yes">../driver.hpp</includes>
    <includes local="no">functional</includes>
    <incdepgraph>
      <node id="5">
        <label>functional</label>
      </node>
      <node id="2">
        <label>../driver.hpp</label>
        <link refid="driver_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/github/workspace/include/libembeddedhal/gpio/gpio.hpp</label>
        <link refid="gpio_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>enum.hpp</label>
        <link refid="enum_8hpp"/>
      </node>
      <node id="4">
        <label>type_traits</label>
      </node>
    </incdepgraph>
    <innerclass refid="structembed_1_1input__pin__settings" prot="public">embed::input_pin_settings</innerclass>
    <innerclass refid="structembed_1_1output__pin__settings" prot="public">embed::output_pin_settings</innerclass>
    <innerclass refid="structembed_1_1interrupt__pin__settings" prot="public">embed::interrupt_pin_settings</innerclass>
    <innerclass refid="classembed_1_1input__pin" prot="public">embed::input_pin</innerclass>
    <innerclass refid="classembed_1_1output__pin" prot="public">embed::output_pin</innerclass>
    <innerclass refid="classembed_1_1interrupt__pin" prot="public">embed::interrupt_pin</innerclass>
    <innernamespace refid="namespaceembed">embed</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../driver.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;functional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceembed" kindref="compound">embed</ref><sp/>{</highlight></codeline>
<codeline lineno="13" refid="namespaceembed_1a5ab6b9e7ccdd68ae6b998c8b586a75a6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/><ref refid="namespaceembed_1a5ab6b9e7ccdd68ae6b998c8b586a75a6" kindref="member">pin_resistor</ref></highlight></codeline>
<codeline lineno="14"><highlight class="normal">{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><ref refid="namespaceembed_1a5ab6b9e7ccdd68ae6b998c8b586a75a6a334c4a4c42fdb79d7ebc3e73b517e6f8" kindref="member">none</ref><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><ref refid="namespaceembed_1a5ab6b9e7ccdd68ae6b998c8b586a75a6a6bd95a5bd1a571a29b57aa0dfda9d77b" kindref="member">pull_down</ref>,</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><ref refid="namespaceembed_1a5ab6b9e7ccdd68ae6b998c8b586a75a6a5dd40e1f7d5c287d1df85dac013c1c38" kindref="member">pull_up</ref>,</highlight></codeline>
<codeline lineno="34"><highlight class="normal">};</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="structembed_1_1input__pin__settings" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structembed_1_1input__pin__settings" kindref="compound">input_pin_settings</ref></highlight></codeline>
<codeline lineno="41"><highlight class="normal">{</highlight></codeline>
<codeline lineno="46" refid="structembed_1_1input__pin__settings_1aac469f9301f234b76d70af2f74825809" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespaceembed_1a5ab6b9e7ccdd68ae6b998c8b586a75a6" kindref="member">pin_resistor</ref><sp/><ref refid="structembed_1_1input__pin__settings_1aac469f9301f234b76d70af2f74825809" kindref="member">resistor</ref><sp/>=<sp/><ref refid="namespaceembed_1a5ab6b9e7ccdd68ae6b998c8b586a75a6a5dd40e1f7d5c287d1df85dac013c1c38" kindref="member">pin_resistor::pull_up</ref>;</highlight></codeline>
<codeline lineno="47"><highlight class="normal">};</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="structembed_1_1output__pin__settings" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structembed_1_1output__pin__settings" kindref="compound">output_pin_settings</ref></highlight></codeline>
<codeline lineno="54"><highlight class="normal">{</highlight></codeline>
<codeline lineno="60" refid="structembed_1_1output__pin__settings_1a72794d716c2e13656c801d6d9c8375a1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structembed_1_1output__pin__settings_1a72794d716c2e13656c801d6d9c8375a1" kindref="member">starting_level</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="66" refid="structembed_1_1output__pin__settings_1a512b0f4821c5fb7e7c480b8d80f91a43" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structembed_1_1output__pin__settings_1a512b0f4821c5fb7e7c480b8d80f91a43" kindref="member">open_drain</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="72" refid="structembed_1_1output__pin__settings_1ab9cf7fc8f9bbc092eb96244aee611687" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespaceembed_1a5ab6b9e7ccdd68ae6b998c8b586a75a6" kindref="member">pin_resistor</ref><sp/><ref refid="structembed_1_1output__pin__settings_1ab9cf7fc8f9bbc092eb96244aee611687" kindref="member">resistor</ref><sp/>=<sp/><ref refid="namespaceembed_1a5ab6b9e7ccdd68ae6b998c8b586a75a6a5dd40e1f7d5c287d1df85dac013c1c38" kindref="member">pin_resistor::pull_up</ref>;</highlight></codeline>
<codeline lineno="73"><highlight class="normal">};</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="structembed_1_1interrupt__pin__settings" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structembed_1_1interrupt__pin__settings" kindref="compound">interrupt_pin_settings</ref></highlight></codeline>
<codeline lineno="80"><highlight class="normal">{</highlight></codeline>
<codeline lineno="87" refid="structembed_1_1interrupt__pin__settings_1a4b6719e3a5ce6bf2ec318480991c8298" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespaceembed_1a5ab6b9e7ccdd68ae6b998c8b586a75a6" kindref="member">pin_resistor</ref><sp/><ref refid="structembed_1_1interrupt__pin__settings_1a4b6719e3a5ce6bf2ec318480991c8298" kindref="member">resistor</ref><sp/>=<sp/><ref refid="namespaceembed_1a5ab6b9e7ccdd68ae6b998c8b586a75a6a5dd40e1f7d5c287d1df85dac013c1c38" kindref="member">pin_resistor::pull_up</ref>;</highlight></codeline>
<codeline lineno="88"><highlight class="normal">};</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="classembed_1_1input__pin" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classembed_1_1input__pin" kindref="compound">input_pin</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classembed_1_1driver" kindref="compound">driver</ref>&lt;input_pin_settings&gt;</highlight></codeline>
<codeline lineno="96"><highlight class="normal">{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="104" refid="classembed_1_1input__pin_1a054c5c811aaeba5c5c75dd0959579817" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classembed_1_1input__pin_1a054c5c811aaeba5c5c75dd0959579817" kindref="member">level</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="105"><highlight class="normal">};</highlight></codeline>
<codeline lineno="111" refid="classembed_1_1output__pin" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classembed_1_1output__pin" kindref="compound">output_pin</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classembed_1_1driver" kindref="compound">driver</ref>&lt;output_pin_settings&gt;</highlight></codeline>
<codeline lineno="112"><highlight class="normal">{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="120" refid="classembed_1_1output__pin_1aa4d619e5385e9e6a35b63a4dcec9b423" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classembed_1_1output__pin_1aa4d619e5385e9e6a35b63a4dcec9b423" kindref="member">level</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>p_high)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="129" refid="classembed_1_1output__pin_1a41cf159eb61943c234889a2996bad81e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classembed_1_1output__pin_1a41cf159eb61943c234889a2996bad81e" kindref="member">level</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="130"><highlight class="normal">};</highlight></codeline>
<codeline lineno="138" refid="classembed_1_1interrupt__pin" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classembed_1_1interrupt__pin" kindref="compound">interrupt_pin</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classembed_1_1driver" kindref="compound">driver</ref>&lt;interrupt_pin_settings&gt;</highlight></codeline>
<codeline lineno="139"><highlight class="normal">{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="145" refid="classembed_1_1interrupt__pin_1a07c33ec3b21b40346a0b765bb14627e9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/><ref refid="classembed_1_1interrupt__pin_1a07c33ec3b21b40346a0b765bb14627e9" kindref="member">trigger_edge</ref></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classembed_1_1interrupt__pin_1a07c33ec3b21b40346a0b765bb14627e9a465223d16534b847faf7b88e6cd17139" kindref="member">falling</ref><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classembed_1_1interrupt__pin_1a07c33ec3b21b40346a0b765bb14627e9a637aa1a3f3fe939460e3e6126a3cb76a" kindref="member">rising</ref><sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classembed_1_1interrupt__pin_1a07c33ec3b21b40346a0b765bb14627e9af6cb3e816496528d4187db53bc66567f" kindref="member">both</ref><sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="171" refid="classembed_1_1interrupt__pin_1aeef4d6b6450cf1f2ed86242668343674" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classembed_1_1interrupt__pin_1aeef4d6b6450cf1f2ed86242668343674" kindref="member">level</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="183" refid="classembed_1_1interrupt__pin_1a112a6dbbb7aa4bbbf8e1f92e41b4fce9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classembed_1_1interrupt__pin_1a112a6dbbb7aa4bbbf8e1f92e41b4fce9" kindref="member">attach_interrupt</ref>(std::function&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)&gt;<sp/>p_callback,</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classembed_1_1interrupt__pin_1a07c33ec3b21b40346a0b765bb14627e9" kindref="member">trigger_edge</ref><sp/>p_trigger)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="189" refid="classembed_1_1interrupt__pin_1a4777e9de3417b01250bdfd1c7f96233b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classembed_1_1interrupt__pin_1a4777e9de3417b01250bdfd1c7f96233b" kindref="member">detach_interrupt</ref>()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="190"><highlight class="normal">};</highlight></codeline>
<codeline lineno="191"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>embed</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/github/workspace/include/libembeddedhal/gpio/gpio.hpp"/>
  </compounddef>
</doxygen>
