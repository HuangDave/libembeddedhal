<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygenindex xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="index.xsd" version="1.9.1" xml:lang="en-US">
  <compound refid="classembed_1_1adc" kind="class"><name>embed::adc</name>
    <member refid="classembed_1_1adc_1a234368fe6b85240d0ed257b0d7dcfc16" kind="function"><name>read</name></member>
  </compound>
  <compound refid="structembed_1_1bit__depth" kind="struct"><name>embed::bit_depth</name>
    <member refid="structembed_1_1bit__depth_1a2520211c9434bfdc8668aca6742d7ae5" kind="variable"><name>value</name></member>
    <member refid="structembed_1_1bit__depth_1aede59a50bab871ba71f29718abad6bf2" kind="function"><name>bit_depth</name></member>
  </compound>
  <compound refid="classembed_1_1bit__limits" kind="class"><name>embed::bit_limits</name>
    <member refid="classembed_1_1bit__limits_1a4d0a420505e966911033bb1db25d7327" kind="function"><name>max</name></member>
    <member refid="classembed_1_1bit__limits_1a74eb8b17d9ad93285ef2d9520d504b72" kind="function"><name>min</name></member>
  </compound>
  <compound refid="classembed_1_1can" kind="class"><name>embed::can</name>
    <member refid="classembed_1_1can_1a526ae12b76dffd3dda0891247da12b55" kind="typedef"><name>id_t</name></member>
    <member refid="classembed_1_1can_1a60e009b5ebdf8bb922b88f080d00a37f" kind="function"><name>send</name></member>
    <member refid="classembed_1_1can_1a60b406a9a7689761e6481f451a1bc277" kind="function"><name>receive</name></member>
    <member refid="classembed_1_1can_1a253e7c87a6a5438adefc991a861232b2" kind="function"><name>has_data</name></member>
    <member refid="classembed_1_1can_1a996fd4b52acd90ef05b5972c3e2a3fff" kind="function"><name>attach_interrupt</name></member>
  </compound>
  <compound refid="classembed_1_1can__network" kind="class"><name>embed::can_network</name>
    <member refid="classembed_1_1can__network_1a7e0dae220f46a5406f548a961478ef34" kind="variable"><name>m_can</name></member>
    <member refid="classembed_1_1can__network_1ad2bd818ef73c6e499e88898e172d0b17" kind="variable"><name>m_messages</name></member>
    <member refid="classembed_1_1can__network_1ab753d9f66866c86c81acb75558d6f105" kind="function"><name>can_network</name></member>
    <member refid="classembed_1_1can__network_1a252f3734fb6b491f71285e998f73ddd9" kind="function"><name>driver_initialize</name></member>
    <member refid="classembed_1_1can__network_1abbc1679f4d5b8e0359badb6e746bad9c" kind="function"><name>register_message_id</name></member>
    <member refid="classembed_1_1can__network_1af65e894f1ad841bbec996020ab83a9f9" kind="function"><name>manually_call_receive_handler</name></member>
    <member refid="classembed_1_1can__network_1a8a88151b0137da5fe3e09e99992568d0" kind="function"><name>bus</name></member>
    <member refid="classembed_1_1can__network_1aaab256f31f0435d1277292d54a0aaa44" kind="function"><name>GetInternalMap</name></member>
    <member refid="classembed_1_1can__network_1a3ae7a5c67e2a3f929a955753496f7e0d" kind="function"><name>receive_handler</name></member>
  </compound>
  <compound refid="structembed_1_1can__settings" kind="struct"><name>embed::can_settings</name>
    <member refid="structembed_1_1can__settings_1adff7b22f9a82b60d171e046f7c3c0407" kind="variable"><name>clock_rate_hz</name></member>
  </compound>
  <compound refid="classembed_1_1counter" kind="class"><name>embed::counter</name>
    <member refid="classembed_1_1counter_1a4c1aba30af1ec98a9a67d9e272fdb896" kind="enum"><name>controls</name></member>
    <member refid="classembed_1_1counter_1a4c1aba30af1ec98a9a67d9e272fdb896aea2b2676c28c0db26d39331a336c6b92" kind="enumvalue"><name>start</name></member>
    <member refid="classembed_1_1counter_1a4c1aba30af1ec98a9a67d9e272fdb896aef399b2d446bb37b7c32ad2cc1b6045b" kind="enumvalue"><name>stop</name></member>
    <member refid="classembed_1_1counter_1a4c1aba30af1ec98a9a67d9e272fdb896a86266ee937d97f812a8e57d22b62ee29" kind="enumvalue"><name>reset</name></member>
    <member refid="classembed_1_1counter_1a1be2b2ccf263b691869efb7faeceac00" kind="function"><name>is_running</name></member>
    <member refid="classembed_1_1counter_1ab2689e7eaab22afbf67faccf85f0bb31" kind="function"><name>control</name></member>
    <member refid="classembed_1_1counter_1a7c96f78693ea3037a5f3414f1cb4b3d2" kind="function"><name>period</name></member>
    <member refid="classembed_1_1counter_1a3c275a38f1242bab8a05a47410ec09bc" kind="function"><name>period</name></member>
    <member refid="classembed_1_1counter_1a54d3fb7657d6a128533d4b7c61900b55" kind="function"><name>count</name></member>
  </compound>
  <compound refid="classembed_1_1dac" kind="class"><name>embed::dac</name>
    <member refid="classembed_1_1dac_1aefe62c17cae7adc84e80a866b08fd841" kind="function"><name>write</name></member>
  </compound>
  <compound refid="classembed_1_1driver" kind="class"><name>embed::driver</name>
    <member refid="classembed_1_1driver_1afb925433a5897293609af5fae29e3dc3" kind="variable"><name>m_settings</name></member>
    <member refid="classembed_1_1driver_1aac7d23e384bc27a26b77c8fd681483ef" kind="variable"><name>m_initialized_settings</name></member>
    <member refid="classembed_1_1driver_1ab8b2029f33d55b9ffffd6e88d846cd7b" kind="variable"><name>m_initialized</name></member>
    <member refid="classembed_1_1driver_1a947a3487fa3acd0879e83872d9c97b01" kind="function"><name>initialize</name></member>
    <member refid="classembed_1_1driver_1a54440bf23c0c34102f563da1193d99ae" kind="function"><name>reset</name></member>
    <member refid="classembed_1_1driver_1a346f472e8c212d09c8f45aebd0089d7b" kind="function"><name>is_initialized</name></member>
    <member refid="classembed_1_1driver_1ae6eb991ebb2321bb3565c2a03a613219" kind="function"><name>settings</name></member>
    <member refid="classembed_1_1driver_1a7e13fe8999142475da8c5b84927f03aa" kind="function"><name>initialized_settings</name></member>
    <member refid="classembed_1_1driver_1a1677362481d10c3b48544359daadf081" kind="function"><name>driver_initialize</name></member>
  </compound>
  <compound refid="classembed_1_1full__scale" kind="class"><name>embed::full_scale</name>
    <member refid="classembed_1_1full__scale_1ad7c1fd9bcd334afffd3c5f779793aa5a" kind="variable"><name>bit_width</name></member>
    <member refid="classembed_1_1full__scale_1aa372261d840ae3e1ac3f56bc2900b0f9" kind="variable"><name>m_value</name></member>
    <member refid="classembed_1_1full__scale_1ab1ae7f3a156abced5ec4bb21c6f3fe91" kind="function"><name>full_scale</name></member>
    <member refid="classembed_1_1full__scale_1ada396c0b7336f0ea809b485553254b50" kind="function"><name>full_scale</name></member>
    <member refid="classembed_1_1full__scale_1a20d97dfafe9e6806aa6193a5c5eee02b" kind="function"><name>operator=</name></member>
    <member refid="classembed_1_1full__scale_1a3fa551382bb4e54cecfe092afd9410a8" kind="function"><name>value</name></member>
  </compound>
  <compound refid="structembed_1_1this__thread_1_1global__clocks" kind="struct"><name>embed::this_thread::global_clocks</name>
    <member refid="structembed_1_1this__thread_1_1global__clocks_1aadda5521129361a25908d05d16e1532f" kind="variable"><name>m_incremental_uptime</name></member>
    <member refid="structembed_1_1this__thread_1_1global__clocks_1ac6fa3c9d11c80464fc5cf793cfcc56fa" kind="variable"><name>m_loop_delay</name></member>
    <member refid="structembed_1_1this__thread_1_1global__clocks_1a612c94b42185ffffc6f88fa14fc3d3dc" kind="variable"><name>m_global_sleep</name></member>
    <member refid="structembed_1_1this__thread_1_1global__clocks_1a0b006a49adf3eaf2b4f97b146b2e9eb8" kind="variable"><name>m_global_uptime</name></member>
  </compound>
  <compound refid="classembed_1_1i2c" kind="class"><name>embed::i2c</name>
    <member refid="classembed_1_1i2c_1a660ff3aad3dcc7ac7d3a1a4f529cc808" kind="function"><name>transaction</name></member>
    <member refid="classembed_1_1i2c_1a6c7304be5c00cfef506c200ce23d4706" kind="function"><name>busy</name></member>
  </compound>
  <compound refid="structembed_1_1i2c__settings" kind="struct"><name>embed::i2c_settings</name>
    <member refid="structembed_1_1i2c__settings_1ad61e6722daa0fa538bd58ec427d8ceca" kind="variable"><name>clock_rate_hz</name></member>
  </compound>
  <compound refid="classembed_1_1input__pin" kind="class"><name>embed::input_pin</name>
    <member refid="classembed_1_1input__pin_1a054c5c811aaeba5c5c75dd0959579817" kind="function"><name>level</name></member>
  </compound>
  <compound refid="structembed_1_1input__pin__settings" kind="struct"><name>embed::input_pin_settings</name>
    <member refid="structembed_1_1input__pin__settings_1aac469f9301f234b76d70af2f74825809" kind="variable"><name>resistor</name></member>
  </compound>
  <compound refid="classembed_1_1interrupt__pin" kind="class"><name>embed::interrupt_pin</name>
    <member refid="classembed_1_1interrupt__pin_1a07c33ec3b21b40346a0b765bb14627e9" kind="enum"><name>trigger_edge</name></member>
    <member refid="classembed_1_1interrupt__pin_1a07c33ec3b21b40346a0b765bb14627e9a465223d16534b847faf7b88e6cd17139" kind="enumvalue"><name>falling</name></member>
    <member refid="classembed_1_1interrupt__pin_1a07c33ec3b21b40346a0b765bb14627e9a637aa1a3f3fe939460e3e6126a3cb76a" kind="enumvalue"><name>rising</name></member>
    <member refid="classembed_1_1interrupt__pin_1a07c33ec3b21b40346a0b765bb14627e9af6cb3e816496528d4187db53bc66567f" kind="enumvalue"><name>both</name></member>
    <member refid="classembed_1_1interrupt__pin_1aeef4d6b6450cf1f2ed86242668343674" kind="function"><name>level</name></member>
    <member refid="classembed_1_1interrupt__pin_1a112a6dbbb7aa4bbbf8e1f92e41b4fce9" kind="function"><name>attach_interrupt</name></member>
    <member refid="classembed_1_1interrupt__pin_1a4777e9de3417b01250bdfd1c7f96233b" kind="function"><name>detach_interrupt</name></member>
  </compound>
  <compound refid="structembed_1_1interrupt__pin__settings" kind="struct"><name>embed::interrupt_pin_settings</name>
    <member refid="structembed_1_1interrupt__pin__settings_1a4b6719e3a5ce6bf2ec318480991c8298" kind="variable"><name>resistor</name></member>
  </compound>
  <compound refid="structembed_1_1invalid__option__t" kind="struct"><name>embed::invalid_option_t</name>
  </compound>
  <compound refid="structembed_1_1can_1_1message__t" kind="struct"><name>embed::can::message_t</name>
    <member refid="structembed_1_1can_1_1message__t_1a15354cd19883024c6a84248585ce219e" kind="variable"><name>id</name></member>
    <member refid="structembed_1_1can_1_1message__t_1a10af3d52291a016b9d2e1dd30689428e" kind="variable"><name>length</name></member>
    <member refid="structembed_1_1can_1_1message__t_1adbe3cbe93e44048839edb2ab8ed95238" kind="variable"><name>payload</name></member>
    <member refid="structembed_1_1can_1_1message__t_1ae776e993d158b81e0276ea328006066c" kind="variable"><name>is_remote_request</name></member>
  </compound>
  <compound refid="structembed_1_1no__settings" kind="struct"><name>embed::no_settings</name>
  </compound>
  <compound refid="classembed_1_1can__network_1_1node__t" kind="class"><name>embed::can_network::node_t</name>
    <member refid="classembed_1_1can__network_1_1node__t_1a1f31f566fe3ab4f7b41546128c55e3f1" kind="variable"><name>can_network</name></member>
    <member refid="classembed_1_1can__network_1_1node__t_1a6da8f9ba51409dbea82d145cad1cd9bd" kind="variable"><name>data</name></member>
    <member refid="classembed_1_1can__network_1_1node__t_1a81604de320e6df7f7bf195769c28d0c1" kind="variable"><name>access_counter</name></member>
    <member refid="classembed_1_1can__network_1_1node__t_1a8b2c7f9f34d8fbe65526b245c21bb5c9" kind="function"><name>node_t</name></member>
    <member refid="classembed_1_1can__network_1_1node__t_1ad1fe9561adf224ed08073cbedd46f233" kind="function"><name>operator=</name></member>
    <member refid="classembed_1_1can__network_1_1node__t_1ab2ca030b6309e21d47f2295a3e15f697" kind="function"><name>node_t</name></member>
    <member refid="classembed_1_1can__network_1_1node__t_1ad412ab57392b6b8a722d921b8c5980b9" kind="function"><name>secure_get</name></member>
    <member refid="classembed_1_1can__network_1_1node__t_1add4d8732fb274d1b947ed2fe36c7b01c" kind="function"><name>update</name></member>
  </compound>
  <compound refid="classembed_1_1output__pin" kind="class"><name>embed::output_pin</name>
    <member refid="classembed_1_1output__pin_1aa4d619e5385e9e6a35b63a4dcec9b423" kind="function"><name>level</name></member>
    <member refid="classembed_1_1output__pin_1a41cf159eb61943c234889a2996bad81e" kind="function"><name>level</name></member>
  </compound>
  <compound refid="structembed_1_1output__pin__settings" kind="struct"><name>embed::output_pin_settings</name>
    <member refid="structembed_1_1output__pin__settings_1a72794d716c2e13656c801d6d9c8375a1" kind="variable"><name>starting_level</name></member>
    <member refid="structembed_1_1output__pin__settings_1a512b0f4821c5fb7e7c480b8d80f91a43" kind="variable"><name>open_drain</name></member>
    <member refid="structembed_1_1output__pin__settings_1ab9cf7fc8f9bbc092eb96244aee611687" kind="variable"><name>resistor</name></member>
  </compound>
  <compound refid="classembed_1_1pwm" kind="class"><name>embed::pwm</name>
    <member refid="classembed_1_1pwm_1afdd94125ad15984c5d2a0a1e4e06d4c1" kind="function"><name>frequency</name></member>
    <member refid="classembed_1_1pwm_1a2386b4771cba6aacc52cee284e6d8a97" kind="function"><name>frequency</name></member>
    <member refid="classembed_1_1pwm_1a7be0deafffda62ebc139deb95f2f8ac1" kind="function"><name>duty_cycle</name></member>
    <member refid="classembed_1_1pwm_1a85356e45fe5b142102930d0b964ee372" kind="function"><name>duty_cycle</name></member>
  </compound>
  <compound refid="classembed_1_1serial" kind="class"><name>embed::serial</name>
    <member refid="classembed_1_1serial_1a2632150facd5b70f49dedea7108679d6" kind="function"><name>write</name></member>
    <member refid="classembed_1_1serial_1acaa9db822945c72a220f2ca7c4c03ab9" kind="function"><name>busy</name></member>
    <member refid="classembed_1_1serial_1a01006e49540c953a3bbc7bdfcb9d05c6" kind="function"><name>bytes_available</name></member>
    <member refid="classembed_1_1serial_1aff1745f3944aaaf9d467257db7a8282a" kind="function"><name>read</name></member>
    <member refid="classembed_1_1serial_1a241d49eb37b52bd1eadd830af0595319" kind="function"><name>flush</name></member>
  </compound>
  <compound refid="structembed_1_1serial__settings" kind="struct"><name>embed::serial_settings</name>
    <member refid="structembed_1_1serial__settings_1aa3b190afd1618bb8653d70614f343ba5" kind="enum"><name>stop_bits</name></member>
    <member refid="structembed_1_1serial__settings_1aa3b190afd1618bb8653d70614f343ba5af97c5d29941bfb1b2fdab0874906ab82" kind="enumvalue"><name>one</name></member>
    <member refid="structembed_1_1serial__settings_1aa3b190afd1618bb8653d70614f343ba5ab8a9f715dbb64fd5c56e7783c6820a61" kind="enumvalue"><name>two</name></member>
    <member refid="structembed_1_1serial__settings_1ac2988aa8b684a4914287f6fb5a0cef72" kind="enum"><name>parity</name></member>
    <member refid="structembed_1_1serial__settings_1ac2988aa8b684a4914287f6fb5a0cef72a334c4a4c42fdb79d7ebc3e73b517e6f8" kind="enumvalue"><name>none</name></member>
    <member refid="structembed_1_1serial__settings_1ac2988aa8b684a4914287f6fb5a0cef72aa2b6f2a6066ed8700d83335fc50a2b8e" kind="enumvalue"><name>odd</name></member>
    <member refid="structembed_1_1serial__settings_1ac2988aa8b684a4914287f6fb5a0cef72acc935c5faf4c8f7a0468d7552a9b8138" kind="enumvalue"><name>even</name></member>
    <member refid="structembed_1_1serial__settings_1ac2988aa8b684a4914287f6fb5a0cef72ab84b8cf8e4af79a2a4bee99694be7f33" kind="enumvalue"><name>forced1</name></member>
    <member refid="structembed_1_1serial__settings_1ac2988aa8b684a4914287f6fb5a0cef72a60f2dab25d32fc2bce590dc511a72dae" kind="enumvalue"><name>forced0</name></member>
    <member refid="structembed_1_1serial__settings_1abebb5ef90d047b3704a4ce34371b4652" kind="variable"><name>baud_rate</name></member>
    <member refid="structembed_1_1serial__settings_1af205e75751848f04250f1e40c1b0491e" kind="variable"><name>parity</name></member>
    <member refid="structembed_1_1serial__settings_1af7ae21b1c9f40b97d0afb4b1aa9c79dc" kind="variable"><name>stop</name></member>
    <member refid="structembed_1_1serial__settings_1aabc9abaf417d460ec28d0aaf893dc7cd" kind="variable"><name>frame_size</name></member>
  </compound>
  <compound refid="classembed_1_1spi" kind="class"><name>embed::spi</name>
    <member refid="classembed_1_1spi_1ac83140dcde0da4897c7ad766bd79ab8c" kind="function"><name>busy</name></member>
    <member refid="classembed_1_1spi_1af1f14f47277f4a13c6447c7d07c16997" kind="function"><name>transfer</name></member>
  </compound>
  <compound refid="structembed_1_1spi__settings" kind="struct"><name>embed::spi_settings</name>
    <member refid="structembed_1_1spi__settings_1a01bd134d38fb48c8fa63a868e345f16e" kind="variable"><name>clock_rate_hz</name></member>
    <member refid="structembed_1_1spi__settings_1a6fa3fc55011c5ffbab7491bff82bfc64" kind="variable"><name>clock_idles_high</name></member>
    <member refid="structembed_1_1spi__settings_1ad24872715b2a8b659a29644afead3c3f" kind="variable"><name>data_valid_on_trailing_edge</name></member>
  </compound>
  <compound refid="classembed_1_1static__callable" kind="class"><name>embed::static_callable</name>
  </compound>
  <compound refid="classembed_1_1static__callable_3_01owner__class_00_01reference__designator_00_01return__t_07args__t_8_8_8_08_4" kind="class"><name>embed::static_callable&lt; owner_class, reference_designator, return_t(args_t...)&gt;</name>
    <member refid="classembed_1_1static__callable_3_01owner__class_00_01reference__designator_00_01return__t_07args__t_8_8_8_08_4_1a7128859ce658dfba40cc8bf153ded33b" kind="variable"><name>callback</name></member>
    <member refid="classembed_1_1static__callable_3_01owner__class_00_01reference__designator_00_01return__t_07args__t_8_8_8_08_4_1adb9aceaf500b6d66ba03782a669ba3b4" kind="function"><name>static_callable</name></member>
    <member refid="classembed_1_1static__callable_3_01owner__class_00_01reference__designator_00_01return__t_07args__t_8_8_8_08_4_1a121f3acadb5eaf4121adb7bfa2b6f4d5" kind="function"><name>get_handler</name></member>
    <member refid="classembed_1_1static__callable_3_01owner__class_00_01reference__designator_00_01return__t_07args__t_8_8_8_08_4_1adab1cd41908a3cf6f72c739113689cb1" kind="function"><name>handler</name></member>
  </compound>
  <compound refid="classembed_1_1static__memory__resource" kind="class"><name>embed::static_memory_resource</name>
    <member refid="classembed_1_1static__memory__resource_1a0417eb1ad34a0e5dd98ce46d75b9a6b1" kind="variable"><name>m_buffer</name></member>
    <member refid="classembed_1_1static__memory__resource_1a0aebc672f89c65f54b8716b614f842ea" kind="variable"><name>m_unallocated_memory</name></member>
    <member refid="classembed_1_1static__memory__resource_1a005531515c71f538be2c0854abea0c25" kind="variable"><name>m_resource</name></member>
    <member refid="classembed_1_1static__memory__resource_1accc5d3c63b39f659edf8fc3cd068f6a8" kind="function"><name>static_memory_resource</name></member>
    <member refid="classembed_1_1static__memory__resource_1a8f950ea93be16b35e1930543313c3025" kind="function"><name>capacity</name></member>
    <member refid="classembed_1_1static__memory__resource_1a8a2645e3abfaaa0d8e7c53b8ebe1dceb" kind="function"><name>memory_used</name></member>
    <member refid="classembed_1_1static__memory__resource_1aa14999eb854014176cded0f4bc406a4c" kind="function"><name>memory_available</name></member>
    <member refid="classembed_1_1static__memory__resource_1aa8338b0fd0c40352b002a8bf6ce37000" kind="function"><name>do_allocate</name></member>
    <member refid="classembed_1_1static__memory__resource_1a95886425ea5d45ec20ecf5f5468ffd72" kind="function"><name>do_deallocate</name></member>
    <member refid="classembed_1_1static__memory__resource_1a730601f3a9b7aaa3265ce7421e599291" kind="function"><name>do_is_equal</name></member>
  </compound>
  <compound refid="classembed_1_1timer" kind="class"><name>embed::timer</name>
    <member refid="classembed_1_1timer_1ae5ee3e39d88160bbeefa7fcaa1d50c18" kind="enum"><name>controls</name></member>
    <member refid="classembed_1_1timer_1ae5ee3e39d88160bbeefa7fcaa1d50c18aea2b2676c28c0db26d39331a336c6b92" kind="enumvalue"><name>start</name></member>
    <member refid="classembed_1_1timer_1ae5ee3e39d88160bbeefa7fcaa1d50c18aef399b2d446bb37b7c32ad2cc1b6045b" kind="enumvalue"><name>stop</name></member>
    <member refid="classembed_1_1timer_1ae5ee3e39d88160bbeefa7fcaa1d50c18a86266ee937d97f812a8e57d22b62ee29" kind="enumvalue"><name>reset</name></member>
    <member refid="classembed_1_1timer_1ad3837ad993cdc37231c434faa95112c1" kind="enum"><name>type</name></member>
    <member refid="classembed_1_1timer_1ad3837ad993cdc37231c434faa95112c1a3d9c0b6e0b8c31d44e2d378d9632f00a" kind="enumvalue"><name>oneshot</name></member>
    <member refid="classembed_1_1timer_1ad3837ad993cdc37231c434faa95112c1ad2884efee751eb4746b685827c7efcd9" kind="enumvalue"><name>continuous</name></member>
    <member refid="classembed_1_1timer_1a90722bb4cbaa45305acf97af43d4c3ca" kind="function"><name>is_running</name></member>
    <member refid="classembed_1_1timer_1af4ff388c97d49044000b5f3b873a87e3" kind="function"><name>control</name></member>
    <member refid="classembed_1_1timer_1a125765b1ec176884510a756619b37a07" kind="function"><name>attach_interrupt</name></member>
  </compound>
  <compound refid="namespaceembed" kind="namespace"><name>embed</name>
    <member refid="namespaceembed_1a5ab6b9e7ccdd68ae6b998c8b586a75a6" kind="enum"><name>pin_resistor</name></member>
    <member refid="namespaceembed_1a5ab6b9e7ccdd68ae6b998c8b586a75a6a334c4a4c42fdb79d7ebc3e73b517e6f8" kind="enumvalue"><name>none</name></member>
    <member refid="namespaceembed_1a5ab6b9e7ccdd68ae6b998c8b586a75a6a6bd95a5bd1a571a29b57aa0dfda9d77b" kind="enumvalue"><name>pull_down</name></member>
    <member refid="namespaceembed_1a5ab6b9e7ccdd68ae6b998c8b586a75a6a5dd40e1f7d5c287d1df85dac013c1c38" kind="enumvalue"><name>pull_up</name></member>
    <member refid="namespaceembed_1a0c3a3fccb52284cef1b912f6c2c4c5cc" kind="variable"><name>platform_string</name></member>
    <member refid="namespaceembed_1a987ef4ed606ec89c1e19cce294309efe" kind="variable"><name>invalid_option</name></member>
    <member refid="namespaceembed_1aea8ad233b7538689ad6f63d629743222" kind="function"><name>is_platform</name></member>
    <member refid="namespaceembed_1a34fb9ef716de27d60ec74784b0a16307" kind="function"><name>is_a_test</name></member>
    <member refid="namespaceembed_1adb81fed604e4119c9318e47024eeb4b3" kind="function"><name>value</name></member>
    <member refid="namespaceembed_1a0a3fb60ed53706e6ff6f7bd57406eef9" kind="function"><name>generate_field_of_ones</name></member>
    <member refid="namespaceembed_1af2520d12e7e5c618488100c2b5035391" kind="function"><name>increase_bit_depth</name></member>
    <member refid="namespaceembed_1a275d9ea59b830bbabfb5cd33e3d1426d" kind="function"><name>operator*</name></member>
  </compound>
  <compound refid="namespaceembed_1_1this__thread" kind="namespace"><name>embed::this_thread</name>
    <member refid="namespaceembed_1_1this__thread_1a52242a600cd579fd6ca97984718813da" kind="typedef"><name>time_increment</name></member>
    <member refid="namespaceembed_1_1this__thread_1a6cce4592820502535c418e4920890a8a" kind="typedef"><name>sleep_function</name></member>
    <member refid="namespaceembed_1_1this__thread_1a8c5134d64bfe076ffeab36051bc6274c" kind="typedef"><name>uptime_function</name></member>
    <member refid="namespaceembed_1_1this__thread_1a6c18d64dfb85828b9e8981141451f864" kind="function"><name>sleep_for</name></member>
    <member refid="namespaceembed_1_1this__thread_1a8d098e7d833c133fc5bd1acf14f88f4e" kind="function"><name>uptime</name></member>
    <member refid="namespaceembed_1_1this__thread_1ade54eb516836eec3ddc20487ea69dded" kind="function"><name>set_global_sleep</name></member>
    <member refid="namespaceembed_1_1this__thread_1aad65a79dbc6b91e0277fc0fa7b5b7e09" kind="function"><name>set_global_uptime</name></member>
  </compound>
  <compound refid="adc_8hpp" kind="file"><name>adc.hpp</name>
  </compound>
  <compound refid="can_8hpp" kind="file"><name>can.hpp</name>
  </compound>
  <compound refid="can__network_8hpp" kind="file"><name>can_network.hpp</name>
  </compound>
  <compound refid="clock_8hpp" kind="file"><name>clock.hpp</name>
  </compound>
  <compound refid="rtc_8hpp" kind="file"><name>rtc.hpp</name>
  </compound>
  <compound refid="context_8hpp" kind="file"><name>context.hpp</name>
    <member refid="context_8hpp_1a786d51023bf2ededed548bb861d49aa9" kind="define"><name>PLATFORM_STRING</name></member>
  </compound>
  <compound refid="counter_8hpp" kind="file"><name>counter.hpp</name>
  </compound>
  <compound refid="dac_8hpp" kind="file"><name>dac.hpp</name>
  </compound>
  <compound refid="pixel__display_8hpp" kind="file"><name>pixel_display.hpp</name>
  </compound>
  <compound refid="text__display_8hpp" kind="file"><name>text_display.hpp</name>
  </compound>
  <compound refid="driver_8hpp" kind="file"><name>driver.hpp</name>
  </compound>
  <compound refid="enum_8hpp" kind="file"><name>enum.hpp</name>
  </compound>
  <compound refid="full__scale_8hpp" kind="file"><name>full_scale.hpp</name>
  </compound>
  <compound refid="gpio_8hpp" kind="file"><name>gpio.hpp</name>
  </compound>
  <compound refid="i2c_8hpp" kind="file"><name>i2c.hpp</name>
  </compound>
  <compound refid="accelerometer_8hpp" kind="file"><name>accelerometer.hpp</name>
  </compound>
  <compound refid="compass_8hpp" kind="file"><name>compass.hpp</name>
  </compound>
  <compound refid="gyroscope_8hpp" kind="file"><name>gyroscope.hpp</name>
  </compound>
  <compound refid="pwm_8hpp" kind="file"><name>pwm.hpp</name>
  </compound>
  <compound refid="serial_8hpp" kind="file"><name>serial.hpp</name>
  </compound>
  <compound refid="spi_8hpp" kind="file"><name>spi.hpp</name>
  </compound>
  <compound refid="static__callable_8hpp" kind="file"><name>static_callable.hpp</name>
  </compound>
  <compound refid="static__memory__resource_8hpp" kind="file"><name>static_memory_resource.hpp</name>
  </compound>
  <compound refid="timer_8hpp" kind="file"><name>timer.hpp</name>
  </compound>
  <compound refid="dir_927caa68e237d360131c9e07c9afa597" kind="dir"><name>/github/workspace/include/libembeddedhal/adc</name>
  </compound>
  <compound refid="dir_e20bf4e9710363826966b0b412d4debd" kind="dir"><name>/github/workspace/include/libembeddedhal/can</name>
  </compound>
  <compound refid="dir_f25ad95c46dd226bffda6bee6443a8fb" kind="dir"><name>/github/workspace/include/libembeddedhal/clock</name>
  </compound>
  <compound refid="dir_ad8ece6cee1ba925824cfdb6f5c3da75" kind="dir"><name>/github/workspace/include/libembeddedhal/counter</name>
  </compound>
  <compound refid="dir_721e551b0c5204a89226dce355491e85" kind="dir"><name>/github/workspace/include/libembeddedhal/dac</name>
  </compound>
  <compound refid="dir_3cee096307004f9e28c0239776a33c26" kind="dir"><name>/github/workspace/include/libembeddedhal/display</name>
  </compound>
  <compound refid="dir_55a4b9528082363551010136e678bdc9" kind="dir"><name>/github/workspace/include/libembeddedhal/gpio</name>
  </compound>
  <compound refid="dir_4b54f0ad81c942e33daad38b7db927e0" kind="dir"><name>/github/workspace/include/libembeddedhal/i2c</name>
  </compound>
  <compound refid="dir_c3ea8e27c6da74b0e03e34338a3d15a3" kind="dir"><name>/github/workspace/include/libembeddedhal/imu</name>
  </compound>
  <compound refid="dir_d44c64559bbebec7f509842c48db8b23" kind="dir"><name>/github/workspace/include</name>
  </compound>
  <compound refid="dir_d44e2fde02e0e8a6a790ae54b19f7024" kind="dir"><name>/github/workspace/include/libembeddedhal</name>
  </compound>
  <compound refid="dir_7c0c2efd89501992642cef17876e123b" kind="dir"><name>/github/workspace/include/libembeddedhal/pwm</name>
  </compound>
  <compound refid="dir_9ed38be3b360acaf3dfe962d6d8e508f" kind="dir"><name>/github/workspace/include/libembeddedhal/serial</name>
  </compound>
  <compound refid="dir_fad7e47fb7d2c086310d40fe47f863bc" kind="dir"><name>/github/workspace/include/libembeddedhal/spi</name>
  </compound>
  <compound refid="dir_b9f1d506e6dc52cb20d5a67ec9072e27" kind="dir"><name>/github/workspace/include/libembeddedhal/timer</name>
  </compound>
</doxygenindex>
