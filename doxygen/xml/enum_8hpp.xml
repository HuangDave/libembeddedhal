<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="enum_8hpp" kind="file" language="C++">
    <compoundname>enum.hpp</compoundname>
    <includedby refid="driver_8hpp" local="yes">/github/workspace/include/libembeddedhal/driver.hpp</includedby>
    <invincdepgraph>
      <node id="2">
        <label>/github/workspace/include/libembeddedhal/driver.hpp</label>
        <link refid="driver_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>/github/workspace/include/libembeddedhal/i2c/i2c.hpp</label>
        <link refid="i2c_8hpp"/>
      </node>
      <node id="5">
        <label>/github/workspace/include/libembeddedhal/can/can_network.hpp</label>
        <link refid="can__network_8hpp"/>
      </node>
      <node id="8">
        <label>/github/workspace/include/libembeddedhal/gpio/gpio.hpp</label>
        <link refid="gpio_8hpp"/>
      </node>
      <node id="7">
        <label>/github/workspace/include/libembeddedhal/dac/dac.hpp</label>
        <link refid="dac_8hpp"/>
      </node>
      <node id="6">
        <label>/github/workspace/include/libembeddedhal/counter/counter.hpp</label>
        <link refid="counter_8hpp"/>
      </node>
      <node id="12">
        <label>/github/workspace/include/libembeddedhal/spi/spi.hpp</label>
        <link refid="spi_8hpp"/>
      </node>
      <node id="1">
        <label>/github/workspace/include/libembeddedhal/enum.hpp</label>
        <link refid="enum_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>/github/workspace/include/libembeddedhal/adc/adc.hpp</label>
        <link refid="adc_8hpp"/>
      </node>
      <node id="10">
        <label>/github/workspace/include/libembeddedhal/pwm/pwm.hpp</label>
        <link refid="pwm_8hpp"/>
      </node>
      <node id="13">
        <label>/github/workspace/include/libembeddedhal/timer/timer.hpp</label>
        <link refid="timer_8hpp"/>
      </node>
      <node id="4">
        <label>/github/workspace/include/libembeddedhal/can/can.hpp</label>
        <link refid="can_8hpp"/>
      </node>
      <node id="11">
        <label>/github/workspace/include/libembeddedhal/serial/serial.hpp</label>
        <link refid="serial_8hpp"/>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespaceembed">embed</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceembed" kindref="compound">embed</ref><sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>enum_type&gt;</highlight></codeline>
<codeline lineno="13" refid="namespaceembed_1adb81fed604e4119c9318e47024eeb4b3" refkind="member"><highlight class="normal">constexpr<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespaceembed_1adb81fed604e4119c9318e47024eeb4b3" kindref="member">value</ref>(enum_type<sp/>enum_value)</highlight></codeline>
<codeline lineno="14"><highlight class="normal">{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">std::underlying_type_t&lt;enum_type&gt;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(enum_value);</highlight></codeline>
<codeline lineno="16"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>embed</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/github/workspace/include/libembeddedhal/enum.hpp"/>
  </compounddef>
</doxygen>
